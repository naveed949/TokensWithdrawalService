{
  "contractName": "Token",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "supply_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "depositer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "withdrawer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "batchSize",
          "type": "uint256"
        }
      ],
      "name": "WithdrawalHandled",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "deposits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingWithdrawals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "withdraws",
      "outputs": [
        {
          "internalType": "address",
          "name": "withdrawer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "batchSize",
          "type": "uint256"
        }
      ],
      "name": "handleWithdrawals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"supply_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"batchSize\",\"type\":\"uint256\"}],\"name\":\"WithdrawalHandled\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"batchSize\",\"type\":\"uint256\"}],\"name\":\"handleWithdrawals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingWithdrawals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraws\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Naveed\",\"details\":\"Except standard ERC20 token's features, this smartcontract has two additional features through which\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"constructor to initialize Token contract.\",\"params\":{\"name_\":\"name of ERC20 token\",\"supply_\":\"total supply of token\",\"symbol_\":\"symbol of token\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"deposit(uint256)\":{\"details\":\"token holders can deposit as much tokens as he wants in more than one transactions. Total deposit amount gets updated each time.\",\"params\":{\"amount\":\"amount of the tokens depositer want to deposit.\"}},\"handleWithdrawals(uint256)\":{\"details\":\"only admin can trigger this function.\",\"params\":{\"batchSize\":\"number of withdraws to process **** condition: withdraws must be requested first by users/withdrawers.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"withdraw(uint256)\":{\"details\":\"token holders can withdraw as much tokens as he wants in more than one transactions.\",\"params\":{\"amount\":\"amount of the tokens withdrawer want to withdraw **** condition: withdrawer must have deposited enought tokens first.\"}}},\"stateVariables\":{\"deposits\":{\"details\":\"depositer address => total amount depositer has deposited\"},\"withdraws\":{\"details\":\"withdrawId => Withdraw struct\"}},\"title\":\"Token - ERC20 Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"admin()\":{\"notice\":\"account which handle users withdrawal requests\"},\"deposit(uint256)\":{\"notice\":\"this function is to let token holder deposit his tokens to admin wallet/account.\"},\"deposits(address)\":{\"notice\":\"mapping to track users deposits\"},\"handleWithdrawals(uint256)\":{\"notice\":\"this function is to let admin handle withdraw requests of withdrawers by sending them back their deposited amount as per their withdraw request.\"},\"pendingWithdrawals()\":{\"notice\":\"count to track pending withdrawals\"},\"withdraw(uint256)\":{\"notice\":\"this function is to let token holder withdraw his tokens from admin wallet/account.\"},\"withdraws(uint256)\":{\"notice\":\"mapping to track users withdraw requests\"}},\"notice\":\"This is an ERC20 token, allowing users to deposit & withdraw tokens.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/malik/Work/work/task/Plutus_task/smartcontract/contracts/Token.sol\":\"Token\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/malik/Work/work/task/Plutus_task/smartcontract/contracts/Token.sol\":{\"keccak256\":\"0x427f0839fa4505b4c733da806506a6a652f9fd9812efce90a5151ac293bf7ac2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c522bcebefec1402b422673ae052ef8c280b9f733126eb0a591414b6475a646\",\"dweb:/ipfs/QmQUYd2tRAQ2TufRnX9seMHUw34w26Z1VA4mRSUTiNzjuX\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://300a0cc7be3b26c96c22a47ffa9530a585e1c4f2dba3021d9bf309dc63007487\",\"dweb:/ipfs/QmQmxsvxK6CaJmQ4D8vDCYPLHMqcMmZLcBqedG4GFAbzu9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200230938038062002309833981810160405281019062000037919062000385565b82828160039080519060200190620000519291906200024c565b5080600490805190602001906200006a9291906200024c565b5050506200007f3382620000c960201b60201c565b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505062000691565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200013c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001339062000460565b60405180910390fd5b62000150600083836200024260201b60201c565b806002600082825462000164919062000517565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620001bb919062000517565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000222919062000482565b60405180910390a36200023e600083836200024760201b60201c565b5050565b505050565b505050565b8280546200025a90620005b4565b90600052602060002090601f0160209004810192826200027e5760008555620002ca565b82601f106200029957805160ff1916838001178555620002ca565b82800160010185558215620002ca579182015b82811115620002c9578251825591602001919060010190620002ac565b5b509050620002d99190620002dd565b5090565b5b80821115620002f8576000816000905550600101620002de565b5090565b6000620003136200030d84620004d3565b6200049f565b9050828152602081018484840111156200032c57600080fd5b620003398482856200057e565b509392505050565b600082601f8301126200035357600080fd5b815162000365848260208601620002fc565b91505092915050565b6000815190506200037f8162000677565b92915050565b6000806000606084860312156200039b57600080fd5b600084015167ffffffffffffffff811115620003b657600080fd5b620003c48682870162000341565b935050602084015167ffffffffffffffff811115620003e257600080fd5b620003f08682870162000341565b925050604062000403868287016200036e565b9150509250925092565b60006200041c601f8362000506565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b6200045a8162000574565b82525050565b600060208201905081810360008301526200047b816200040d565b9050919050565b60006020820190506200049960008301846200044f565b92915050565b6000604051905081810181811067ffffffffffffffff82111715620004c957620004c862000648565b5b8060405250919050565b600067ffffffffffffffff821115620004f157620004f062000648565b5b601f19601f8301169050602081019050919050565b600082825260208201905092915050565b6000620005248262000574565b9150620005318362000574565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620005695762000568620005ea565b5b828201905092915050565b6000819050919050565b60005b838110156200059e57808201518184015260208101905062000581565b83811115620005ae576000848401525b50505050565b60006002820490506001821680620005cd57607f821691505b60208210811415620005e457620005e362000619565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620006828162000574565b81146200068e57600080fd5b50565b611c6880620006a16000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063b6b55f2511610071578063b6b55f251461031c578063beca03d514610338578063dd62ed3e14610356578063f851a44014610386578063fc7e286d146103a457610116565b806370a082311461026e57806395d89b411461029e578063a457c2d7146102bc578063a9059cbb146102ec57610116565b806323b872dd116100e957806323b872dd146101a35780632e1a7d4d146101d3578063313ce567146101ef578063395093511461020d57806355466c371461023d57610116565b806301b86d121461011b57806306fdde0314610137578063095ea7b31461015557806318160ddd14610185575b600080fd5b61013560048036038101906101309190611396565b6103d4565b005b61013f610600565b60405161014c919061181d565b60405180910390f35b61016f600480360381019061016a919061135a565b610692565b60405161017c9190611802565b60405180910390f35b61018d6106b0565b60405161019a919061197f565b60405180910390f35b6101bd60048036038101906101b8919061130b565b6106ba565b6040516101ca9190611802565b60405180910390f35b6101ed60048036038101906101e89190611396565b6107b2565b005b6101f7610938565b60405161020491906119d1565b60405180910390f35b6102276004803603810190610222919061135a565b610941565b6040516102349190611802565b60405180910390f35b61025760048036038101906102529190611396565b6109ed565b6040516102659291906117d9565b60405180910390f35b610288600480360381019061028391906112a6565b610a31565b604051610295919061197f565b60405180910390f35b6102a6610a79565b6040516102b3919061181d565b60405180910390f35b6102d660048036038101906102d1919061135a565b610b0b565b6040516102e39190611802565b60405180910390f35b6103066004803603810190610301919061135a565b610bf6565b6040516103139190611802565b60405180910390f35b61033660048036038101906103319190611396565b610c14565b005b610340610d27565b60405161034d919061197f565b60405180910390f35b610370600480360381019061036b91906112cf565b610d2d565b60405161037d919061197f565b60405180910390f35b61038e610db4565b60405161039b91906117be565b60405180910390f35b6103be60048036038101906103b991906112a6565b610dda565b6040516103cb919061197f565b60405180910390f35b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610464576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045b9061193f565b60405180910390fd5b6000600654116104a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a0906118df565b60405180910390fd5b6000600654905060005b828110156105be57610538600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660086000600654815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660086000600654815260200190815260200160002060010154610df2565b600860006006548152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090555050610595600160065461107390919063ffffffff16565b600681905550600060065414156105ab576105be565b80806105b690611b4c565b9150506104b3565b507f50d9276253fcd2b3025af851fb64fdacaa8a7c62ad274e5d54595d2b84a1605481600654846040516105f49392919061199a565b60405180910390a15050565b60606003805461060f90611b1a565b80601f016020809104026020016040519081016040528092919081815260200182805461063b90611b1a565b80156106885780601f1061065d57610100808354040283529160200191610688565b820191906000526020600020905b81548152906001019060200180831161066b57829003601f168201915b5050505050905090565b60006106a661069f611089565b8484611091565b6001905092915050565b6000600254905090565b60006106c7848484610df2565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610712611089565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610792576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610789906118bf565b60405180910390fd5b6107a68561079e611089565b858403611091565b60019150509392505050565b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610834576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082b9061187f565b60405180910390fd5b61084a600160065461125c90919063ffffffff16565b60068190555060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018281525060086000600654815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050503373ffffffffffffffffffffffffffffffffffffffff166006547f37e8063b72a944a76de602f32b82fd8c2a1c6f99564c727ffaf913c7762cd4208360405161092d919061197f565b60405180910390a350565b60006012905090565b60006109e361094e611089565b84846001600061095c611089565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109de9190611a08565b611091565b6001905092915050565b60086020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054610a8890611b1a565b80601f0160208091040260200160405190810160405280929190818152602001828054610ab490611b1a565b8015610b015780601f10610ad657610100808354040283529160200191610b01565b820191906000526020600020905b815481529060010190602001808311610ae457829003601f168201915b5050505050905090565b60008060016000610b1a611089565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610bd7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bce9061195f565b60405180910390fd5b610beb610be2611089565b85858403611091565b600191505092915050565b6000610c0a610c03611089565b8484610df2565b6001905092915050565b610c40600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682610bf6565b50610c9381600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461125c90919063ffffffff16565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c82604051610d1c919061197f565b60405180910390a250565b60065481565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60076020528060005260406000206000915090505481565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e59906118ff565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ed2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec99061183f565b60405180910390fd5b610edd838383611272565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610f63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5a9061189f565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ff69190611a08565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161105a919061197f565b60405180910390a361106d848484611277565b50505050565b600081836110819190611a5e565b905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611101576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f89061191f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611171576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111689061185f565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161124f919061197f565b60405180910390a3505050565b6000818361126a9190611a08565b905092915050565b505050565b505050565b60008135905061128b81611c04565b92915050565b6000813590506112a081611c1b565b92915050565b6000602082840312156112b857600080fd5b60006112c68482850161127c565b91505092915050565b600080604083850312156112e257600080fd5b60006112f08582860161127c565b92505060206113018582860161127c565b9150509250929050565b60008060006060848603121561132057600080fd5b600061132e8682870161127c565b935050602061133f8682870161127c565b925050604061135086828701611291565b9150509250925092565b6000806040838503121561136d57600080fd5b600061137b8582860161127c565b925050602061138c85828601611291565b9150509250929050565b6000602082840312156113a857600080fd5b60006113b684828501611291565b91505092915050565b6113c881611a92565b82525050565b6113d781611aa4565b82525050565b60006113e8826119ec565b6113f281856119f7565b9350611402818560208601611ae7565b61140b81611bf3565b840191505092915050565b60006114236023836119f7565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006114896022836119f7565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006114ef601c836119f7565b91507f696e73756666696369656e742066756e6473206465706f7369746564000000006000830152602082019050919050565b600061152f6026836119f7565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006115956028836119f7565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b60006115fb6018836119f7565b91507f6e6f207769746864726177616c732072657175657374656400000000000000006000830152602082019050919050565b600061163b6025836119f7565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006116a16024836119f7565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611707601e836119f7565b91507f756e617574686f72697a65643a2063616c6c6572206e6f742061646d696e00006000830152602082019050919050565b60006117476025836119f7565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6117a981611ad0565b82525050565b6117b881611ada565b82525050565b60006020820190506117d360008301846113bf565b92915050565b60006040820190506117ee60008301856113bf565b6117fb60208301846117a0565b9392505050565b600060208201905061181760008301846113ce565b92915050565b6000602082019050818103600083015261183781846113dd565b905092915050565b6000602082019050818103600083015261185881611416565b9050919050565b600060208201905081810360008301526118788161147c565b9050919050565b60006020820190508181036000830152611898816114e2565b9050919050565b600060208201905081810360008301526118b881611522565b9050919050565b600060208201905081810360008301526118d881611588565b9050919050565b600060208201905081810360008301526118f8816115ee565b9050919050565b600060208201905081810360008301526119188161162e565b9050919050565b6000602082019050818103600083015261193881611694565b9050919050565b60006020820190508181036000830152611958816116fa565b9050919050565b600060208201905081810360008301526119788161173a565b9050919050565b600060208201905061199460008301846117a0565b92915050565b60006060820190506119af60008301866117a0565b6119bc60208301856117a0565b6119c960408301846117a0565b949350505050565b60006020820190506119e660008301846117af565b92915050565b600081519050919050565b600082825260208201905092915050565b6000611a1382611ad0565b9150611a1e83611ad0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611a5357611a52611b95565b5b828201905092915050565b6000611a6982611ad0565b9150611a7483611ad0565b925082821015611a8757611a86611b95565b5b828203905092915050565b6000611a9d82611ab0565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611b05578082015181840152602081019050611aea565b83811115611b14576000848401525b50505050565b60006002820490506001821680611b3257607f821691505b60208210811415611b4657611b45611bc4565b5b50919050565b6000611b5782611ad0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611b8a57611b89611b95565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b611c0d81611a92565b8114611c1857600080fd5b50565b611c2481611ad0565b8114611c2f57600080fd5b5056fea2646970667358221220ff92a2860af8d69687414dd50ee5adb7b2a85e36797ee986b1345ed87ece3beb64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063b6b55f2511610071578063b6b55f251461031c578063beca03d514610338578063dd62ed3e14610356578063f851a44014610386578063fc7e286d146103a457610116565b806370a082311461026e57806395d89b411461029e578063a457c2d7146102bc578063a9059cbb146102ec57610116565b806323b872dd116100e957806323b872dd146101a35780632e1a7d4d146101d3578063313ce567146101ef578063395093511461020d57806355466c371461023d57610116565b806301b86d121461011b57806306fdde0314610137578063095ea7b31461015557806318160ddd14610185575b600080fd5b61013560048036038101906101309190611396565b6103d4565b005b61013f610600565b60405161014c919061181d565b60405180910390f35b61016f600480360381019061016a919061135a565b610692565b60405161017c9190611802565b60405180910390f35b61018d6106b0565b60405161019a919061197f565b60405180910390f35b6101bd60048036038101906101b8919061130b565b6106ba565b6040516101ca9190611802565b60405180910390f35b6101ed60048036038101906101e89190611396565b6107b2565b005b6101f7610938565b60405161020491906119d1565b60405180910390f35b6102276004803603810190610222919061135a565b610941565b6040516102349190611802565b60405180910390f35b61025760048036038101906102529190611396565b6109ed565b6040516102659291906117d9565b60405180910390f35b610288600480360381019061028391906112a6565b610a31565b604051610295919061197f565b60405180910390f35b6102a6610a79565b6040516102b3919061181d565b60405180910390f35b6102d660048036038101906102d1919061135a565b610b0b565b6040516102e39190611802565b60405180910390f35b6103066004803603810190610301919061135a565b610bf6565b6040516103139190611802565b60405180910390f35b61033660048036038101906103319190611396565b610c14565b005b610340610d27565b60405161034d919061197f565b60405180910390f35b610370600480360381019061036b91906112cf565b610d2d565b60405161037d919061197f565b60405180910390f35b61038e610db4565b60405161039b91906117be565b60405180910390f35b6103be60048036038101906103b991906112a6565b610dda565b6040516103cb919061197f565b60405180910390f35b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610464576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045b9061193f565b60405180910390fd5b6000600654116104a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a0906118df565b60405180910390fd5b6000600654905060005b828110156105be57610538600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660086000600654815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660086000600654815260200190815260200160002060010154610df2565b600860006006548152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090555050610595600160065461107390919063ffffffff16565b600681905550600060065414156105ab576105be565b80806105b690611b4c565b9150506104b3565b507f50d9276253fcd2b3025af851fb64fdacaa8a7c62ad274e5d54595d2b84a1605481600654846040516105f49392919061199a565b60405180910390a15050565b60606003805461060f90611b1a565b80601f016020809104026020016040519081016040528092919081815260200182805461063b90611b1a565b80156106885780601f1061065d57610100808354040283529160200191610688565b820191906000526020600020905b81548152906001019060200180831161066b57829003601f168201915b5050505050905090565b60006106a661069f611089565b8484611091565b6001905092915050565b6000600254905090565b60006106c7848484610df2565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610712611089565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610792576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610789906118bf565b60405180910390fd5b6107a68561079e611089565b858403611091565b60019150509392505050565b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610834576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082b9061187f565b60405180910390fd5b61084a600160065461125c90919063ffffffff16565b60068190555060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018281525060086000600654815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050503373ffffffffffffffffffffffffffffffffffffffff166006547f37e8063b72a944a76de602f32b82fd8c2a1c6f99564c727ffaf913c7762cd4208360405161092d919061197f565b60405180910390a350565b60006012905090565b60006109e361094e611089565b84846001600061095c611089565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109de9190611a08565b611091565b6001905092915050565b60086020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054610a8890611b1a565b80601f0160208091040260200160405190810160405280929190818152602001828054610ab490611b1a565b8015610b015780601f10610ad657610100808354040283529160200191610b01565b820191906000526020600020905b815481529060010190602001808311610ae457829003601f168201915b5050505050905090565b60008060016000610b1a611089565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610bd7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bce9061195f565b60405180910390fd5b610beb610be2611089565b85858403611091565b600191505092915050565b6000610c0a610c03611089565b8484610df2565b6001905092915050565b610c40600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682610bf6565b50610c9381600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461125c90919063ffffffff16565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c82604051610d1c919061197f565b60405180910390a250565b60065481565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60076020528060005260406000206000915090505481565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e59906118ff565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ed2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec99061183f565b60405180910390fd5b610edd838383611272565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610f63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5a9061189f565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ff69190611a08565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161105a919061197f565b60405180910390a361106d848484611277565b50505050565b600081836110819190611a5e565b905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611101576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f89061191f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611171576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111689061185f565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161124f919061197f565b60405180910390a3505050565b6000818361126a9190611a08565b905092915050565b505050565b505050565b60008135905061128b81611c04565b92915050565b6000813590506112a081611c1b565b92915050565b6000602082840312156112b857600080fd5b60006112c68482850161127c565b91505092915050565b600080604083850312156112e257600080fd5b60006112f08582860161127c565b92505060206113018582860161127c565b9150509250929050565b60008060006060848603121561132057600080fd5b600061132e8682870161127c565b935050602061133f8682870161127c565b925050604061135086828701611291565b9150509250925092565b6000806040838503121561136d57600080fd5b600061137b8582860161127c565b925050602061138c85828601611291565b9150509250929050565b6000602082840312156113a857600080fd5b60006113b684828501611291565b91505092915050565b6113c881611a92565b82525050565b6113d781611aa4565b82525050565b60006113e8826119ec565b6113f281856119f7565b9350611402818560208601611ae7565b61140b81611bf3565b840191505092915050565b60006114236023836119f7565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006114896022836119f7565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006114ef601c836119f7565b91507f696e73756666696369656e742066756e6473206465706f7369746564000000006000830152602082019050919050565b600061152f6026836119f7565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006115956028836119f7565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b60006115fb6018836119f7565b91507f6e6f207769746864726177616c732072657175657374656400000000000000006000830152602082019050919050565b600061163b6025836119f7565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006116a16024836119f7565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611707601e836119f7565b91507f756e617574686f72697a65643a2063616c6c6572206e6f742061646d696e00006000830152602082019050919050565b60006117476025836119f7565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6117a981611ad0565b82525050565b6117b881611ada565b82525050565b60006020820190506117d360008301846113bf565b92915050565b60006040820190506117ee60008301856113bf565b6117fb60208301846117a0565b9392505050565b600060208201905061181760008301846113ce565b92915050565b6000602082019050818103600083015261183781846113dd565b905092915050565b6000602082019050818103600083015261185881611416565b9050919050565b600060208201905081810360008301526118788161147c565b9050919050565b60006020820190508181036000830152611898816114e2565b9050919050565b600060208201905081810360008301526118b881611522565b9050919050565b600060208201905081810360008301526118d881611588565b9050919050565b600060208201905081810360008301526118f8816115ee565b9050919050565b600060208201905081810360008301526119188161162e565b9050919050565b6000602082019050818103600083015261193881611694565b9050919050565b60006020820190508181036000830152611958816116fa565b9050919050565b600060208201905081810360008301526119788161173a565b9050919050565b600060208201905061199460008301846117a0565b92915050565b60006060820190506119af60008301866117a0565b6119bc60208301856117a0565b6119c960408301846117a0565b949350505050565b60006020820190506119e660008301846117af565b92915050565b600081519050919050565b600082825260208201905092915050565b6000611a1382611ad0565b9150611a1e83611ad0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611a5357611a52611b95565b5b828201905092915050565b6000611a6982611ad0565b9150611a7483611ad0565b925082821015611a8757611a86611b95565b5b828203905092915050565b6000611a9d82611ab0565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611b05578082015181840152602081019050611aea565b83811115611b14576000848401525b50505050565b60006002820490506001821680611b3257607f821691505b60208210811415611b4657611b45611bc4565b5b50919050565b6000611b5782611ad0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611b8a57611b89611b95565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b611c0d81611a92565b8114611c1857600080fd5b50565b611c2481611ad0565b8114611c2f57600080fd5b5056fea2646970667358221220ff92a2860af8d69687414dd50ee5adb7b2a85e36797ee986b1345ed87ece3beb64736f6c63430008000033",
  "immutableReferences": {},
  "sourceMap": "504:3543:1:-:0;;;1376:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1455:5;1462:7;2037:5:2;2029;:13;;;;;;;;;;;;:::i;:::-;;2062:7;2052;:17;;;;;;;;;;;;:::i;:::-;;1963:113;;1477:26:1::1;1483:10;1495:7;1477:5;;;:26;;:::i;:::-;1517:10;1509:5;;:18;;;;;;;;;;;;;;;;;;1376:156:::0;;;504:3543;;8311:389:2;8413:1;8394:21;;:7;:21;;;;8386:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8462:49;8491:1;8495:7;8504:6;8462:20;;;:49;;:::i;:::-;8538:6;8522:12;;:22;;;;;;;:::i;:::-;;;;;;;;8576:6;8554:9;:18;8564:7;8554:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8618:7;8597:37;;8614:1;8597:37;;;8627:6;8597:37;;;;;;:::i;:::-;;;;;;;;8645:48;8673:1;8677:7;8686:6;8645:19;;;:48;;:::i;:::-;8311:389;;:::o;10973:121::-;;;;:::o;11682:120::-;;;;:::o;504:3543:1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:353:7:-;;121:65;136:49;178:6;136:49;:::i;:::-;121:65;:::i;:::-;112:74;;209:6;202:5;195:21;247:4;240:5;236:16;285:3;276:6;271:3;267:16;264:25;261:2;;;302:1;299;292:12;261:2;315:39;347:6;342:3;337;315:39;:::i;:::-;102:258;;;;;;:::o;380:288::-;;496:3;489:4;481:6;477:17;473:27;463:2;;514:1;511;504:12;463:2;547:6;541:13;572:90;658:3;650:6;643:4;635:6;631:17;572:90;:::i;:::-;563:99;;453:215;;;;;:::o;674:143::-;;762:6;756:13;747:22;;778:33;805:5;778:33;:::i;:::-;737:80;;;;:::o;823:808::-;;;;996:2;984:9;975:7;971:23;967:32;964:2;;;1012:1;1009;1002:12;964:2;1076:1;1065:9;1061:17;1055:24;1106:18;1098:6;1095:30;1092:2;;;1138:1;1135;1128:12;1092:2;1166:74;1232:7;1223:6;1212:9;1208:22;1166:74;:::i;:::-;1156:84;;1026:224;1310:2;1299:9;1295:18;1289:25;1341:18;1333:6;1330:30;1327:2;;;1373:1;1370;1363:12;1327:2;1401:74;1467:7;1458:6;1447:9;1443:22;1401:74;:::i;:::-;1391:84;;1260:225;1524:2;1550:64;1606:7;1597:6;1586:9;1582:22;1550:64;:::i;:::-;1540:74;;1495:129;954:677;;;;;:::o;1637:329::-;;1800:67;1864:2;1859:3;1800:67;:::i;:::-;1793:74;;1897:33;1893:1;1888:3;1884:11;1877:54;1957:2;1952:3;1948:12;1941:19;;1783:183;;;:::o;1972:118::-;2059:24;2077:5;2059:24;:::i;:::-;2054:3;2047:37;2037:53;;:::o;2096:419::-;;2300:2;2289:9;2285:18;2277:26;;2349:9;2343:4;2339:20;2335:1;2324:9;2320:17;2313:47;2377:131;2503:4;2377:131;:::i;:::-;2369:139;;2267:248;;;:::o;2521:222::-;;2652:2;2641:9;2637:18;2629:26;;2665:71;2733:1;2722:9;2718:17;2709:6;2665:71;:::i;:::-;2619:124;;;;:::o;2749:283::-;;2815:2;2809:9;2799:19;;2857:4;2849:6;2845:17;2964:6;2952:10;2949:22;2928:18;2916:10;2913:34;2910:62;2907:2;;;2975:18;;:::i;:::-;2907:2;3015:10;3011:2;3004:22;2789:243;;;;:::o;3038:332::-;;3190:18;3182:6;3179:30;3176:2;;;3212:18;;:::i;:::-;3176:2;3297:4;3293:9;3286:4;3278:6;3274:17;3270:33;3262:41;;3358:4;3352;3348:15;3340:23;;3105:265;;;:::o;3376:169::-;;3494:6;3489:3;3482:19;3534:4;3529:3;3525:14;3510:29;;3472:73;;;;:::o;3551:305::-;;3610:20;3628:1;3610:20;:::i;:::-;3605:25;;3644:20;3662:1;3644:20;:::i;:::-;3639:25;;3798:1;3730:66;3726:74;3723:1;3720:81;3717:2;;;3804:18;;:::i;:::-;3717:2;3848:1;3845;3841:9;3834:16;;3595:261;;;;:::o;3862:77::-;;3928:5;3917:16;;3907:32;;;:::o;3945:307::-;4013:1;4023:113;4037:6;4034:1;4031:13;4023:113;;;4122:1;4117:3;4113:11;4107:18;4103:1;4098:3;4094:11;4087:39;4059:2;4056:1;4052:10;4047:15;;4023:113;;;4154:6;4151:1;4148:13;4145:2;;;4234:1;4225:6;4220:3;4216:16;4209:27;4145:2;3994:258;;;;:::o;4258:320::-;;4339:1;4333:4;4329:12;4319:22;;4386:1;4380:4;4376:12;4407:18;4397:2;;4463:4;4455:6;4451:17;4441:27;;4397:2;4525;4517:6;4514:14;4494:18;4491:38;4488:2;;;4544:18;;:::i;:::-;4488:2;4309:269;;;;:::o;4584:180::-;4632:77;4629:1;4622:88;4729:4;4726:1;4719:15;4753:4;4750:1;4743:15;4770:180;4818:77;4815:1;4808:88;4915:4;4912:1;4905:15;4939:4;4936:1;4929:15;4956:180;5004:77;5001:1;4994:88;5101:4;5098:1;5091:15;5125:4;5122:1;5115:15;5142:122;5215:24;5233:5;5215:24;:::i;:::-;5208:5;5205:35;5195:2;;5254:1;5251;5244:12;5195:2;5185:79;:::o;504:3543:1:-;;;;;;;",
  "deployedSourceMap": "504:3543:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3105:563;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2141:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4238:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3229:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4871:478;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2410:351:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3078:91:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5744:212;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;994:46:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3393:125:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2352:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6443:405;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3721:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1839:229:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;696:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3951:149:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;623:20:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;849:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3105:563;3764:5;;;;;;;;;;;3750:19;;:10;:19;;;3742:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;3203:1:::1;3182:18;;:22;3174:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;3239:12;3254:18;;3239:33;;3284:9;3279:320;3303:9;3299:1;:13;3279:320;;;3329:96;3339:5;;;;;;;;;;;3346:9;:29;3356:18;;3346:29;;;;;;;;;;;:40;;;;;;;;;;;;3388:9;:29;3398:18;;3388:29;;;;;;;;;;;:36;;;3329:9;:96::i;:::-;3442:9;:29;3452:18;;3442:29;;;;;;;;;;;;3435:36:::0;::::1;;;;;;;;;;;;;;;;;;;;;;3502:25;3525:1;3502:18;;:22;;:25;;;;:::i;:::-;3481:18;:46;;;;3563:1;3541:18;;:23;3537:56;;;3577:5;;3537:56;3314:3;;;;;:::i;:::-;;;;3279:320;;;;3609:54;3627:4;3633:18;;3653:9;3609:54;;;;;;;;:::i;:::-;;;;;;;;3810:1;3105:563:::0;:::o;2141:98:2:-;2195:13;2227:5;2220:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:98;:::o;4238:166::-;4321:4;4337:39;4346:12;:10;:12::i;:::-;4360:7;4369:6;4337:8;:39::i;:::-;4393:4;4386:11;;4238:166;;;;:::o;3229:106::-;3290:7;3316:12;;3309:19;;3229:106;:::o;4871:478::-;5007:4;5023:36;5033:6;5041:9;5052:6;5023:9;:36::i;:::-;5070:24;5097:11;:19;5109:6;5097:19;;;;;;;;;;;;;;;:33;5117:12;:10;:12::i;:::-;5097:33;;;;;;;;;;;;;;;;5070:60;;5168:6;5148:16;:26;;5140:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;5253:57;5262:6;5270:12;:10;:12::i;:::-;5303:6;5284:16;:25;5253:8;:57::i;:::-;5338:4;5331:11;;;4871:478;;;;;:::o;2410:351:1:-;2489:6;2465:8;:20;2474:10;2465:20;;;;;;;;;;;;;;;;:30;;2457:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;2600:25;2623:1;2600:18;;:22;;:25;;;;:::i;:::-;2579:18;:46;;;;2663:27;;;;;;;;2672:10;2663:27;;;;;;2683:6;2663:27;;;2631:9;:29;2641:18;;2631:29;;;;;;;;;;;:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2737:10;2706:50;;2717:18;;2706:50;2749:6;2706:50;;;;;;:::i;:::-;;;;;;;;2410:351;:::o;3078:91:2:-;3136:5;3160:2;3153:9;;3078:91;:::o;5744:212::-;5832:4;5848:80;5857:12;:10;:12::i;:::-;5871:7;5917:10;5880:11;:25;5892:12;:10;:12::i;:::-;5880:25;;;;;;;;;;;;;;;:34;5906:7;5880:34;;;;;;;;;;;;;;;;:47;;;;:::i;:::-;5848:8;:80::i;:::-;5945:4;5938:11;;5744:212;;;;:::o;994:46:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3393:125:2:-;3467:7;3493:9;:18;3503:7;3493:18;;;;;;;;;;;;;;;;3486:25;;3393:125;;;:::o;2352:102::-;2408:13;2440:7;2433:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2352:102;:::o;6443:405::-;6536:4;6552:24;6579:11;:25;6591:12;:10;:12::i;:::-;6579:25;;;;;;;;;;;;;;;:34;6605:7;6579:34;;;;;;;;;;;;;;;;6552:61;;6651:15;6631:16;:35;;6623:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6742:67;6751:12;:10;:12::i;:::-;6765:7;6793:15;6774:16;:34;6742:8;:67::i;:::-;6837:4;6830:11;;;6443:405;;;;:::o;3721:172::-;3807:4;3823:42;3833:12;:10;:12::i;:::-;3847:9;3858:6;3823:9;:42::i;:::-;3882:4;3875:11;;3721:172;;;;:::o;1839:229:1:-;1941:23;1950:5;;;;;;;;;;;1957:6;1941:8;:23::i;:::-;;1993:32;2018:6;1993:8;:20;2002:10;1993:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;1970:8;:20;1979:10;1970:20;;;;;;;;;;;;;;;:55;;;;2044:10;2036:27;;;2056:6;2036:27;;;;;;:::i;:::-;;;;;;;;1839:229;:::o;696:33::-;;;;:::o;3951:149:2:-;4040:7;4066:11;:18;4078:5;4066:18;;;;;;;;;;;;;;;:27;4085:7;4066:27;;;;;;;;;;;;;;;;4059:34;;3951:149;;;;:::o;623:20:1:-;;;;;;;;;;;;;:::o;849:44::-;;;;;;;;;;;;;;;;;:::o;7322:713:2:-;7475:1;7457:20;;:6;:20;;;;7449:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7558:1;7537:23;;:9;:23;;;;7529:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;7611:47;7632:6;7640:9;7651:6;7611:20;:47::i;:::-;7669:21;7693:9;:17;7703:6;7693:17;;;;;;;;;;;;;;;;7669:41;;7745:6;7728:13;:23;;7720:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;7864:6;7848:13;:22;7828:9;:17;7838:6;7828:17;;;;;;;;;;;;;;;:42;;;;7914:6;7890:9;:20;7900:9;7890:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;7953:9;7936:35;;7945:6;7936:35;;;7964:6;7936:35;;;;;;:::i;:::-;;;;;;;;7982:46;8002:6;8010:9;8021:6;7982:19;:46::i;:::-;7322:713;;;;:::o;3108:96:6:-;3166:7;3196:1;3192;:5;;;;:::i;:::-;3185:12;;3108:96;;;;:::o;640::5:-;693:7;719:10;712:17;;640:96;:::o;10019:370:2:-;10167:1;10150:19;;:5;:19;;;;10142:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10247:1;10228:21;;:7;:21;;;;10220:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10329:6;10299:11;:18;10311:5;10299:18;;;;;;;;;;;;;;;:27;10318:7;10299:27;;;;;;;;;;;;;;;:36;;;;10366:7;10350:32;;10359:5;10350:32;;;10375:6;10350:32;;;;;;:::i;:::-;;;;;;;;10019:370;;;:::o;2741:96:6:-;2799:7;2829:1;2825;:5;;;;:::i;:::-;2818:12;;2741:96;;;;:::o;10973:121:2:-;;;;:::o;11682:120::-;;;;:::o;7:139:7:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:407::-;;;690:2;678:9;669:7;665:23;661:32;658:2;;;706:1;703;696:12;658:2;749:1;774:53;819:7;810:6;799:9;795:22;774:53;:::i;:::-;764:63;;720:117;876:2;902:53;947:7;938:6;927:9;923:22;902:53;:::i;:::-;892:63;;847:118;648:324;;;;;:::o;978:552::-;;;;1120:2;1108:9;1099:7;1095:23;1091:32;1088:2;;;1136:1;1133;1126:12;1088:2;1179:1;1204:53;1249:7;1240:6;1229:9;1225:22;1204:53;:::i;:::-;1194:63;;1150:117;1306:2;1332:53;1377:7;1368:6;1357:9;1353:22;1332:53;:::i;:::-;1322:63;;1277:118;1434:2;1460:53;1505:7;1496:6;1485:9;1481:22;1460:53;:::i;:::-;1450:63;;1405:118;1078:452;;;;;:::o;1536:407::-;;;1661:2;1649:9;1640:7;1636:23;1632:32;1629:2;;;1677:1;1674;1667:12;1629:2;1720:1;1745:53;1790:7;1781:6;1770:9;1766:22;1745:53;:::i;:::-;1735:63;;1691:117;1847:2;1873:53;1918:7;1909:6;1898:9;1894:22;1873:53;:::i;:::-;1863:63;;1818:118;1619:324;;;;;:::o;1949:262::-;;2057:2;2045:9;2036:7;2032:23;2028:32;2025:2;;;2073:1;2070;2063:12;2025:2;2116:1;2141:53;2186:7;2177:6;2166:9;2162:22;2141:53;:::i;:::-;2131:63;;2087:117;2015:196;;;;:::o;2217:118::-;2304:24;2322:5;2304:24;:::i;:::-;2299:3;2292:37;2282:53;;:::o;2341:109::-;2422:21;2437:5;2422:21;:::i;:::-;2417:3;2410:34;2400:50;;:::o;2456:364::-;;2572:39;2605:5;2572:39;:::i;:::-;2627:71;2691:6;2686:3;2627:71;:::i;:::-;2620:78;;2707:52;2752:6;2747:3;2740:4;2733:5;2729:16;2707:52;:::i;:::-;2784:29;2806:6;2784:29;:::i;:::-;2779:3;2775:39;2768:46;;2548:272;;;;;:::o;2826:367::-;;2989:67;3053:2;3048:3;2989:67;:::i;:::-;2982:74;;3086:34;3082:1;3077:3;3073:11;3066:55;3152:5;3147:2;3142:3;3138:12;3131:27;3184:2;3179:3;3175:12;3168:19;;2972:221;;;:::o;3199:366::-;;3362:67;3426:2;3421:3;3362:67;:::i;:::-;3355:74;;3459:34;3455:1;3450:3;3446:11;3439:55;3525:4;3520:2;3515:3;3511:12;3504:26;3556:2;3551:3;3547:12;3540:19;;3345:220;;;:::o;3571:326::-;;3734:67;3798:2;3793:3;3734:67;:::i;:::-;3727:74;;3831:30;3827:1;3822:3;3818:11;3811:51;3888:2;3883:3;3879:12;3872:19;;3717:180;;;:::o;3903:370::-;;4066:67;4130:2;4125:3;4066:67;:::i;:::-;4059:74;;4163:34;4159:1;4154:3;4150:11;4143:55;4229:8;4224:2;4219:3;4215:12;4208:30;4264:2;4259:3;4255:12;4248:19;;4049:224;;;:::o;4279:372::-;;4442:67;4506:2;4501:3;4442:67;:::i;:::-;4435:74;;4539:34;4535:1;4530:3;4526:11;4519:55;4605:10;4600:2;4595:3;4591:12;4584:32;4642:2;4637:3;4633:12;4626:19;;4425:226;;;:::o;4657:322::-;;4820:67;4884:2;4879:3;4820:67;:::i;:::-;4813:74;;4917:26;4913:1;4908:3;4904:11;4897:47;4970:2;4965:3;4961:12;4954:19;;4803:176;;;:::o;4985:369::-;;5148:67;5212:2;5207:3;5148:67;:::i;:::-;5141:74;;5245:34;5241:1;5236:3;5232:11;5225:55;5311:7;5306:2;5301:3;5297:12;5290:29;5345:2;5340:3;5336:12;5329:19;;5131:223;;;:::o;5360:368::-;;5523:67;5587:2;5582:3;5523:67;:::i;:::-;5516:74;;5620:34;5616:1;5611:3;5607:11;5600:55;5686:6;5681:2;5676:3;5672:12;5665:28;5719:2;5714:3;5710:12;5703:19;;5506:222;;;:::o;5734:328::-;;5897:67;5961:2;5956:3;5897:67;:::i;:::-;5890:74;;5994:32;5990:1;5985:3;5981:11;5974:53;6053:2;6048:3;6044:12;6037:19;;5880:182;;;:::o;6068:369::-;;6231:67;6295:2;6290:3;6231:67;:::i;:::-;6224:74;;6328:34;6324:1;6319:3;6315:11;6308:55;6394:7;6389:2;6384:3;6380:12;6373:29;6428:2;6423:3;6419:12;6412:19;;6214:223;;;:::o;6443:118::-;6530:24;6548:5;6530:24;:::i;:::-;6525:3;6518:37;6508:53;;:::o;6567:112::-;6650:22;6666:5;6650:22;:::i;:::-;6645:3;6638:35;6628:51;;:::o;6685:222::-;;6816:2;6805:9;6801:18;6793:26;;6829:71;6897:1;6886:9;6882:17;6873:6;6829:71;:::i;:::-;6783:124;;;;:::o;6913:332::-;;7072:2;7061:9;7057:18;7049:26;;7085:71;7153:1;7142:9;7138:17;7129:6;7085:71;:::i;:::-;7166:72;7234:2;7223:9;7219:18;7210:6;7166:72;:::i;:::-;7039:206;;;;;:::o;7251:210::-;;7376:2;7365:9;7361:18;7353:26;;7389:65;7451:1;7440:9;7436:17;7427:6;7389:65;:::i;:::-;7343:118;;;;:::o;7467:313::-;;7618:2;7607:9;7603:18;7595:26;;7667:9;7661:4;7657:20;7653:1;7642:9;7638:17;7631:47;7695:78;7768:4;7759:6;7695:78;:::i;:::-;7687:86;;7585:195;;;;:::o;7786:419::-;;7990:2;7979:9;7975:18;7967:26;;8039:9;8033:4;8029:20;8025:1;8014:9;8010:17;8003:47;8067:131;8193:4;8067:131;:::i;:::-;8059:139;;7957:248;;;:::o;8211:419::-;;8415:2;8404:9;8400:18;8392:26;;8464:9;8458:4;8454:20;8450:1;8439:9;8435:17;8428:47;8492:131;8618:4;8492:131;:::i;:::-;8484:139;;8382:248;;;:::o;8636:419::-;;8840:2;8829:9;8825:18;8817:26;;8889:9;8883:4;8879:20;8875:1;8864:9;8860:17;8853:47;8917:131;9043:4;8917:131;:::i;:::-;8909:139;;8807:248;;;:::o;9061:419::-;;9265:2;9254:9;9250:18;9242:26;;9314:9;9308:4;9304:20;9300:1;9289:9;9285:17;9278:47;9342:131;9468:4;9342:131;:::i;:::-;9334:139;;9232:248;;;:::o;9486:419::-;;9690:2;9679:9;9675:18;9667:26;;9739:9;9733:4;9729:20;9725:1;9714:9;9710:17;9703:47;9767:131;9893:4;9767:131;:::i;:::-;9759:139;;9657:248;;;:::o;9911:419::-;;10115:2;10104:9;10100:18;10092:26;;10164:9;10158:4;10154:20;10150:1;10139:9;10135:17;10128:47;10192:131;10318:4;10192:131;:::i;:::-;10184:139;;10082:248;;;:::o;10336:419::-;;10540:2;10529:9;10525:18;10517:26;;10589:9;10583:4;10579:20;10575:1;10564:9;10560:17;10553:47;10617:131;10743:4;10617:131;:::i;:::-;10609:139;;10507:248;;;:::o;10761:419::-;;10965:2;10954:9;10950:18;10942:26;;11014:9;11008:4;11004:20;11000:1;10989:9;10985:17;10978:47;11042:131;11168:4;11042:131;:::i;:::-;11034:139;;10932:248;;;:::o;11186:419::-;;11390:2;11379:9;11375:18;11367:26;;11439:9;11433:4;11429:20;11425:1;11414:9;11410:17;11403:47;11467:131;11593:4;11467:131;:::i;:::-;11459:139;;11357:248;;;:::o;11611:419::-;;11815:2;11804:9;11800:18;11792:26;;11864:9;11858:4;11854:20;11850:1;11839:9;11835:17;11828:47;11892:131;12018:4;11892:131;:::i;:::-;11884:139;;11782:248;;;:::o;12036:222::-;;12167:2;12156:9;12152:18;12144:26;;12180:71;12248:1;12237:9;12233:17;12224:6;12180:71;:::i;:::-;12134:124;;;;:::o;12264:442::-;;12451:2;12440:9;12436:18;12428:26;;12464:71;12532:1;12521:9;12517:17;12508:6;12464:71;:::i;:::-;12545:72;12613:2;12602:9;12598:18;12589:6;12545:72;:::i;:::-;12627;12695:2;12684:9;12680:18;12671:6;12627:72;:::i;:::-;12418:288;;;;;;:::o;12712:214::-;;12839:2;12828:9;12824:18;12816:26;;12852:67;12916:1;12905:9;12901:17;12892:6;12852:67;:::i;:::-;12806:120;;;;:::o;12932:99::-;;13018:5;13012:12;13002:22;;12991:40;;;:::o;13037:169::-;;13155:6;13150:3;13143:19;13195:4;13190:3;13186:14;13171:29;;13133:73;;;;:::o;13212:305::-;;13271:20;13289:1;13271:20;:::i;:::-;13266:25;;13305:20;13323:1;13305:20;:::i;:::-;13300:25;;13459:1;13391:66;13387:74;13384:1;13381:81;13378:2;;;13465:18;;:::i;:::-;13378:2;13509:1;13506;13502:9;13495:16;;13256:261;;;;:::o;13523:191::-;;13583:20;13601:1;13583:20;:::i;:::-;13578:25;;13617:20;13635:1;13617:20;:::i;:::-;13612:25;;13656:1;13653;13650:8;13647:2;;;13661:18;;:::i;:::-;13647:2;13706:1;13703;13699:9;13691:17;;13568:146;;;;:::o;13720:96::-;;13786:24;13804:5;13786:24;:::i;:::-;13775:35;;13765:51;;;:::o;13822:90::-;;13899:5;13892:13;13885:21;13874:32;;13864:48;;;:::o;13918:126::-;;13995:42;13988:5;13984:54;13973:65;;13963:81;;;:::o;14050:77::-;;14116:5;14105:16;;14095:32;;;:::o;14133:86::-;;14208:4;14201:5;14197:16;14186:27;;14176:43;;;:::o;14225:307::-;14293:1;14303:113;14317:6;14314:1;14311:13;14303:113;;;14402:1;14397:3;14393:11;14387:18;14383:1;14378:3;14374:11;14367:39;14339:2;14336:1;14332:10;14327:15;;14303:113;;;14434:6;14431:1;14428:13;14425:2;;;14514:1;14505:6;14500:3;14496:16;14489:27;14425:2;14274:258;;;;:::o;14538:320::-;;14619:1;14613:4;14609:12;14599:22;;14666:1;14660:4;14656:12;14687:18;14677:2;;14743:4;14735:6;14731:17;14721:27;;14677:2;14805;14797:6;14794:14;14774:18;14771:38;14768:2;;;14824:18;;:::i;:::-;14768:2;14589:269;;;;:::o;14864:233::-;;14926:24;14944:5;14926:24;:::i;:::-;14917:33;;14972:66;14965:5;14962:77;14959:2;;;15042:18;;:::i;:::-;14959:2;15089:1;15082:5;15078:13;15071:20;;14907:190;;;:::o;15103:180::-;15151:77;15148:1;15141:88;15248:4;15245:1;15238:15;15272:4;15269:1;15262:15;15289:180;15337:77;15334:1;15327:88;15434:4;15431:1;15424:15;15458:4;15455:1;15448:15;15475:102;;15567:2;15563:7;15558:2;15551:5;15547:14;15543:28;15533:38;;15523:54;;;:::o;15583:122::-;15656:24;15674:5;15656:24;:::i;:::-;15649:5;15646:35;15636:2;;15695:1;15692;15685:12;15636:2;15626:79;:::o;15711:122::-;15784:24;15802:5;15784:24;:::i;:::-;15777:5;15774:35;15764:2;;15823:1;15820;15813:12;15764:2;15754:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^ 0.8.0;\n\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\n\n/// @title Token - ERC20 Token\n/// @author Naveed\n/// @notice This is an ERC20 token, allowing users to deposit & withdraw tokens.\n/// @dev Except standard ERC20 token's features, this smartcontract has two additional features through which\n//       token holders can deposit their tokens to admin and can their deposited tokens. \ncontract Token is ERC20 {\n  using SafeMath for uint256;\n  /// @notice account which handle users withdrawal requests\n  address public admin;\n  /// @notice count to track pending withdrawals\n  uint256 public pendingWithdrawals;\n\n  /// @notice mapping to track users deposits\n  /// @dev depositer address => total amount depositer has deposited\n  mapping (address => uint256) public deposits;\n\n  /// @notice mapping to track users withdraw requests\n  /// @dev withdrawId => Withdraw struct\n  mapping (uint256 => Withdraw) public withdraws;\n\n  /// @dev struct being used in above withdraws mapping, to manage Withdrawer information\n  struct Withdraw {\n    address withdrawer;\n    uint256 amount;\n  }\n\n  /// @dev constructor to initialize Token contract.\n  /// @param name_ name of ERC20 token\n  /// @param symbol_ symbol of token\n  /// @param supply_ total supply of token\n  constructor(string memory name_, string memory symbol_, uint256 supply_) ERC20(name_, symbol_) {\n    _mint(msg.sender, supply_);\n    admin = msg.sender;\n  }\n\n  /// @notice this function is to let token holder deposit his tokens to admin wallet/account.\n  /// @dev token holders can deposit as much tokens as he wants in more than one transactions. Total deposit amount gets updated each time.\n  /// @param amount amount of the tokens depositer want to deposit.\n  function deposit(uint256 amount) public {\n    // escrowing tokens by transferring to admin wallet\n    transfer(admin, amount);\n    deposits[msg.sender] = deposits[msg.sender].add(amount);\n    emit Deposit(msg.sender, amount);\n  }\n\n  /// @notice this function is to let token holder withdraw his tokens from admin wallet/account.\n  /// @dev token holders can withdraw as much tokens as he wants in more than one transactions.\n  /// @param amount amount of the tokens withdrawer want to withdraw\n  /// **** condition: withdrawer must have deposited enought tokens first.\n  function withdraw(uint256 amount) public {\n    require(deposits[msg.sender] >= amount, \"insufficient funds deposited\");\n    // _transfer(admin, msg.sender, amount);\n    pendingWithdrawals = pendingWithdrawals.add(1);\n    withdraws[pendingWithdrawals] = Withdraw(msg.sender,amount);\n    \n    emit Withdrawal(pendingWithdrawals, msg.sender, amount);\n  }\n\n  /// @notice this function is to let admin handle withdraw requests of withdrawers by sending them back their deposited amount as per their withdraw request.\n  /// @dev only admin can trigger this function.\n  /// @param batchSize number of withdraws to process\n  /// **** condition: withdraws must be requested first by users/withdrawers.\n  function handleWithdrawals(uint256 batchSize) onlyAdmin public {\n    require(pendingWithdrawals > 0, \"no withdrawals requested\");\n    uint256 from = pendingWithdrawals;\n\n    for (uint256 i = 0; i < batchSize; i++) {\n        _transfer(admin, withdraws[pendingWithdrawals].withdrawer, withdraws[pendingWithdrawals].amount);\n        delete withdraws[pendingWithdrawals];\n        pendingWithdrawals = pendingWithdrawals.sub(1);\n        if (pendingWithdrawals == 0){\n          break;\n        }\n    }\n    emit WithdrawalHandled(from, pendingWithdrawals, batchSize);\n  }\n/// @dev modifier to ensure caller is admin\n  modifier onlyAdmin() {\n    require(msg.sender == admin, \"unauthorized: caller not admin\");\n    _;\n  }\n\n  // Events\n  event Deposit(address indexed depositer, uint256 amount);\n  event Withdrawal(uint256 indexed id, address indexed withdrawer, uint256 amount);\n  event WithdrawalHandled(uint256 from, uint256 to, uint256 batchSize);\n}\n",
  "sourcePath": "/home/malik/Work/work/task/Plutus_task/smartcontract/contracts/Token.sol",
  "ast": {
    "absolutePath": "/home/malik/Work/work/task/Plutus_task/smartcontract/contracts/Token.sol",
    "exportedSymbols": {
      "Context": [
        937
      ],
      "ERC20": [
        812
      ],
      "IERC20": [
        890
      ],
      "IERC20Metadata": [
        915
      ],
      "SafeMath": [
        1249
      ],
      "Token": [
        266
      ]
    },
    "id": 267,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 35,
        "nodeType": "ImportDirective",
        "scope": 267,
        "sourceUnit": 813,
        "src": "58:55:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 36,
        "nodeType": "ImportDirective",
        "scope": 267,
        "sourceUnit": 1250,
        "src": "114:57:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 38,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 812,
              "src": "522:5:1"
            },
            "id": 39,
            "nodeType": "InheritanceSpecifier",
            "src": "522:5:1"
          }
        ],
        "contractDependencies": [
          812,
          890,
          915,
          937
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 37,
          "nodeType": "StructuredDocumentation",
          "src": "173:241:1",
          "text": "@title Token - ERC20 Token\n @author Naveed\n @notice This is an ERC20 token, allowing users to deposit & withdraw tokens.\n @dev Except standard ERC20 token's features, this smartcontract has two additional features through which"
        },
        "fullyImplemented": true,
        "id": 266,
        "linearizedBaseContracts": [
          266,
          812,
          915,
          890,
          937
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 42,
            "libraryName": {
              "id": 40,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1249,
              "src": "538:8:1"
            },
            "nodeType": "UsingForDirective",
            "src": "532:27:1",
            "typeName": {
              "id": 41,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "551:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 43,
              "nodeType": "StructuredDocumentation",
              "src": "562:58:1",
              "text": "@notice account which handle users withdrawal requests"
            },
            "functionSelector": "f851a440",
            "id": 45,
            "mutability": "mutable",
            "name": "admin",
            "nodeType": "VariableDeclaration",
            "scope": 266,
            "src": "623:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "623:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 46,
              "nodeType": "StructuredDocumentation",
              "src": "647:46:1",
              "text": "@notice count to track pending withdrawals"
            },
            "functionSelector": "beca03d5",
            "id": 48,
            "mutability": "mutable",
            "name": "pendingWithdrawals",
            "nodeType": "VariableDeclaration",
            "scope": 266,
            "src": "696:33:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 47,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "696:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 49,
              "nodeType": "StructuredDocumentation",
              "src": "734:112:1",
              "text": "@notice mapping to track users deposits\n @dev depositer address => total amount depositer has deposited"
            },
            "functionSelector": "fc7e286d",
            "id": 53,
            "mutability": "mutable",
            "name": "deposits",
            "nodeType": "VariableDeclaration",
            "scope": 266,
            "src": "849:44:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 52,
              "keyType": {
                "id": 50,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "858:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "849:28:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 51,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "869:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 54,
              "nodeType": "StructuredDocumentation",
              "src": "898:93:1",
              "text": "@notice mapping to track users withdraw requests\n @dev withdrawId => Withdraw struct"
            },
            "functionSelector": "55466c37",
            "id": 59,
            "mutability": "mutable",
            "name": "withdraws",
            "nodeType": "VariableDeclaration",
            "scope": 266,
            "src": "994:46:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Withdraw_$64_storage_$",
              "typeString": "mapping(uint256 => struct Token.Withdraw)"
            },
            "typeName": {
              "id": 58,
              "keyType": {
                "id": 55,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1003:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "994:29:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Withdraw_$64_storage_$",
                "typeString": "mapping(uint256 => struct Token.Withdraw)"
              },
              "valueType": {
                "id": 57,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 56,
                  "name": "Withdraw",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 64,
                  "src": "1014:8:1"
                },
                "referencedDeclaration": 64,
                "src": "1014:8:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Withdraw_$64_storage_ptr",
                  "typeString": "struct Token.Withdraw"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Token.Withdraw",
            "id": 64,
            "members": [
              {
                "constant": false,
                "id": 61,
                "mutability": "mutable",
                "name": "withdrawer",
                "nodeType": "VariableDeclaration",
                "scope": 64,
                "src": "1157:18:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 60,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1157:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 63,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 64,
                "src": "1181:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 62,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1181:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Withdraw",
            "nodeType": "StructDefinition",
            "scope": 266,
            "src": "1135:65:1",
            "visibility": "public"
          },
          {
            "body": {
              "id": 89,
              "nodeType": "Block",
              "src": "1471:61:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 79,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1483:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1483:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 81,
                        "name": "supply_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "1495:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 78,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 672,
                      "src": "1477:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1477:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "1477:26:1"
                },
                {
                  "expression": {
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 84,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "1509:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 85,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1517:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1517:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1509:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "1509:18:1"
                }
              ]
            },
            "documentation": {
              "id": 65,
              "nodeType": "StructuredDocumentation",
              "src": "1204:169:1",
              "text": "@dev constructor to initialize Token contract.\n @param name_ name of ERC20 token\n @param symbol_ symbol of token\n @param supply_ total supply of token"
            },
            "id": 90,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 74,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 67,
                    "src": "1455:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 75,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 69,
                    "src": "1462:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 76,
                "modifierName": {
                  "id": 73,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 812,
                  "src": "1449:5:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1449:21:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "1388:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1388:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "1409:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1409:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "supply_",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "1432:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1432:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1387:61:1"
            },
            "returnParameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1471:0:1"
            },
            "scope": 266,
            "src": "1376:156:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 120,
              "nodeType": "Block",
              "src": "1879:189:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1950:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 98,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93,
                        "src": "1957:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 96,
                      "name": "transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 386,
                      "src": "1941:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1941:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1941:23:1"
                },
                {
                  "expression": {
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 101,
                        "name": "deposits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "1970:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 104,
                      "indexExpression": {
                        "expression": {
                          "id": 102,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1979:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1979:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1970:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 110,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "2018:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 105,
                            "name": "deposits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "1993:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 108,
                          "indexExpression": {
                            "expression": {
                              "id": 106,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2002:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2002:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1993:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1113,
                        "src": "1993:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1993:32:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1970:55:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "1970:55:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 115,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2044:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2044:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 117,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93,
                        "src": "2056:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 114,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 249,
                      "src": "2036:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2036:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 119,
                  "nodeType": "EmitStatement",
                  "src": "2031:32:1"
                }
              ]
            },
            "documentation": {
              "id": 91,
              "nodeType": "StructuredDocumentation",
              "src": "1536:300:1",
              "text": "@notice this function is to let token holder deposit his tokens to admin wallet/account.\n @dev token holders can deposit as much tokens as he wants in more than one transactions. Total deposit amount gets updated each time.\n @param amount amount of the tokens depositer want to deposit."
            },
            "functionSelector": "b6b55f25",
            "id": 121,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 93,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "1856:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1856:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1855:16:1"
            },
            "returnParameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1879:0:1"
            },
            "scope": 266,
            "src": "1839:229:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 161,
              "nodeType": "Block",
              "src": "2451:310:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 128,
                            "name": "deposits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "2465:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 131,
                          "indexExpression": {
                            "expression": {
                              "id": 129,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2474:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2474:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2465:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 132,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 124,
                          "src": "2489:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2465:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e73756666696369656e742066756e6473206465706f7369746564",
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2497:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3708508cdcde1a636712f5edf8c07c73f35903e7879f5ae7dce97685b6e38ff3",
                          "typeString": "literal_string \"insufficient funds deposited\""
                        },
                        "value": "insufficient funds deposited"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3708508cdcde1a636712f5edf8c07c73f35903e7879f5ae7dce97685b6e38ff3",
                          "typeString": "literal_string \"insufficient funds deposited\""
                        }
                      ],
                      "id": 127,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2457:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2457:71:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "2457:71:1"
                },
                {
                  "expression": {
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 137,
                      "name": "pendingWithdrawals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "2579:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2623:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 138,
                          "name": "pendingWithdrawals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "2600:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1113,
                        "src": "2600:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2600:25:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2579:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "2579:46:1"
                },
                {
                  "expression": {
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 144,
                        "name": "withdraws",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "2631:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Withdraw_$64_storage_$",
                          "typeString": "mapping(uint256 => struct Token.Withdraw storage ref)"
                        }
                      },
                      "id": 146,
                      "indexExpression": {
                        "id": 145,
                        "name": "pendingWithdrawals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "2641:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2631:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Withdraw_$64_storage",
                        "typeString": "struct Token.Withdraw storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 148,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2672:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2672:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 150,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 124,
                          "src": "2683:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 147,
                        "name": "Withdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "2663:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Withdraw_$64_storage_ptr_$",
                          "typeString": "type(struct Token.Withdraw storage pointer)"
                        }
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2663:27:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Withdraw_$64_memory_ptr",
                        "typeString": "struct Token.Withdraw memory"
                      }
                    },
                    "src": "2631:59:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Withdraw_$64_storage",
                      "typeString": "struct Token.Withdraw storage ref"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "2631:59:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 155,
                        "name": "pendingWithdrawals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "2717:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 156,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2737:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2737:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 158,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 124,
                        "src": "2749:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 154,
                      "name": "Withdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 257,
                      "src": "2706:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2706:50:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 160,
                  "nodeType": "EmitStatement",
                  "src": "2701:55:1"
                }
              ]
            },
            "documentation": {
              "id": 122,
              "nodeType": "StructuredDocumentation",
              "src": "2072:335:1",
              "text": "@notice this function is to let token holder withdraw his tokens from admin wallet/account.\n @dev token holders can withdraw as much tokens as he wants in more than one transactions.\n @param amount amount of the tokens withdrawer want to withdraw\n **** condition: withdrawer must have deposited enought tokens first."
            },
            "functionSelector": "2e1a7d4d",
            "id": 162,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "2428:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2428:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2427:16:1"
            },
            "returnParameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2451:0:1"
            },
            "scope": 266,
            "src": "2410:351:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 229,
              "nodeType": "Block",
              "src": "3168:500:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 171,
                          "name": "pendingWithdrawals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "3182:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3203:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3182:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f207769746864726177616c7320726571756573746564",
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3206:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad1abf60b8ced5e7a26dad11ad8fe13de581c58f92006c89519f5401029957ad",
                          "typeString": "literal_string \"no withdrawals requested\""
                        },
                        "value": "no withdrawals requested"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad1abf60b8ced5e7a26dad11ad8fe13de581c58f92006c89519f5401029957ad",
                          "typeString": "literal_string \"no withdrawals requested\""
                        }
                      ],
                      "id": 170,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3174:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3174:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "3174:59:1"
                },
                {
                  "assignments": [
                    178
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 178,
                      "mutability": "mutable",
                      "name": "from",
                      "nodeType": "VariableDeclaration",
                      "scope": 229,
                      "src": "3239:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 177,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3239:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 180,
                  "initialValue": {
                    "id": 179,
                    "name": "pendingWithdrawals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48,
                    "src": "3254:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3239:33:1"
                },
                {
                  "body": {
                    "id": 221,
                    "nodeType": "Block",
                    "src": "3319:280:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 192,
                              "name": "admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "3339:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 193,
                                  "name": "withdraws",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59,
                                  "src": "3346:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Withdraw_$64_storage_$",
                                    "typeString": "mapping(uint256 => struct Token.Withdraw storage ref)"
                                  }
                                },
                                "id": 195,
                                "indexExpression": {
                                  "id": 194,
                                  "name": "pendingWithdrawals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48,
                                  "src": "3356:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3346:29:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Withdraw_$64_storage",
                                  "typeString": "struct Token.Withdraw storage ref"
                                }
                              },
                              "id": 196,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "withdrawer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 61,
                              "src": "3346:40:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 197,
                                  "name": "withdraws",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59,
                                  "src": "3388:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Withdraw_$64_storage_$",
                                    "typeString": "mapping(uint256 => struct Token.Withdraw storage ref)"
                                  }
                                },
                                "id": 199,
                                "indexExpression": {
                                  "id": 198,
                                  "name": "pendingWithdrawals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48,
                                  "src": "3398:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3388:29:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Withdraw_$64_storage",
                                  "typeString": "struct Token.Withdraw storage ref"
                                }
                              },
                              "id": 200,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 63,
                              "src": "3388:36:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 191,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 616,
                            "src": "3329:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3329:96:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 202,
                        "nodeType": "ExpressionStatement",
                        "src": "3329:96:1"
                      },
                      {
                        "expression": {
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "3435:36:1",
                          "subExpression": {
                            "baseExpression": {
                              "id": 203,
                              "name": "withdraws",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59,
                              "src": "3442:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Withdraw_$64_storage_$",
                                "typeString": "mapping(uint256 => struct Token.Withdraw storage ref)"
                              }
                            },
                            "id": 205,
                            "indexExpression": {
                              "id": 204,
                              "name": "pendingWithdrawals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "3452:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3442:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Withdraw_$64_storage",
                              "typeString": "struct Token.Withdraw storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 207,
                        "nodeType": "ExpressionStatement",
                        "src": "3435:36:1"
                      },
                      {
                        "expression": {
                          "id": 213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 208,
                            "name": "pendingWithdrawals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "3481:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 211,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3525:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "id": 209,
                                "name": "pendingWithdrawals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48,
                                "src": "3502:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 210,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1128,
                              "src": "3502:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3502:25:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3481:46:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 214,
                        "nodeType": "ExpressionStatement",
                        "src": "3481:46:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 215,
                            "name": "pendingWithdrawals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "3541:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3563:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3541:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 220,
                        "nodeType": "IfStatement",
                        "src": "3537:56:1",
                        "trueBody": {
                          "id": 219,
                          "nodeType": "Block",
                          "src": "3565:28:1",
                          "statements": [
                            {
                              "id": 218,
                              "nodeType": "Break",
                              "src": "3577:5:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 185,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 182,
                      "src": "3299:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 186,
                      "name": "batchSize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 165,
                      "src": "3303:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3299:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 222,
                  "initializationExpression": {
                    "assignments": [
                      182
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 182,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 222,
                        "src": "3284:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 181,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3284:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 184,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3296:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3284:13:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3314:3:1",
                      "subExpression": {
                        "id": 188,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 182,
                        "src": "3314:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 190,
                    "nodeType": "ExpressionStatement",
                    "src": "3314:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "3279:320:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 224,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "3627:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 225,
                        "name": "pendingWithdrawals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "3633:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 226,
                        "name": "batchSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "3653:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 223,
                      "name": "WithdrawalHandled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 265,
                      "src": "3609:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256)"
                      }
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3609:54:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 228,
                  "nodeType": "EmitStatement",
                  "src": "3604:59:1"
                }
              ]
            },
            "documentation": {
              "id": 163,
              "nodeType": "StructuredDocumentation",
              "src": "2765:337:1",
              "text": "@notice this function is to let admin handle withdraw requests of withdrawers by sending them back their deposited amount as per their withdraw request.\n @dev only admin can trigger this function.\n @param batchSize number of withdraws to process\n **** condition: withdraws must be requested first by users/withdrawers."
            },
            "functionSelector": "01b86d12",
            "id": 230,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 168,
                "modifierName": {
                  "id": 167,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 243,
                  "src": "3151:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3151:9:1"
              }
            ],
            "name": "handleWithdrawals",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "batchSize",
                  "nodeType": "VariableDeclaration",
                  "scope": 230,
                  "src": "3132:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3132:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3131:19:1"
            },
            "returnParameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3168:0:1"
            },
            "scope": 266,
            "src": "3105:563:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 242,
              "nodeType": "Block",
              "src": "3736:80:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 234,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3750:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3750:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 236,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "3764:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3750:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "756e617574686f72697a65643a2063616c6c6572206e6f742061646d696e",
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3771:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e19267ef066701204f2bf44bb207af60fe0311e77fd06f6849dd17844eaebb66",
                          "typeString": "literal_string \"unauthorized: caller not admin\""
                        },
                        "value": "unauthorized: caller not admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e19267ef066701204f2bf44bb207af60fe0311e77fd06f6849dd17844eaebb66",
                          "typeString": "literal_string \"unauthorized: caller not admin\""
                        }
                      ],
                      "id": 233,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3742:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3742:62:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 240,
                  "nodeType": "ExpressionStatement",
                  "src": "3742:62:1"
                },
                {
                  "id": 241,
                  "nodeType": "PlaceholderStatement",
                  "src": "3810:1:1"
                }
              ]
            },
            "documentation": {
              "id": 231,
              "nodeType": "StructuredDocumentation",
              "src": "3669:43:1",
              "text": "@dev modifier to ensure caller is admin"
            },
            "id": 243,
            "name": "onlyAdmin",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3733:2:1"
            },
            "src": "3715:101:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 249,
            "name": "Deposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 245,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "depositer",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "3846:25:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3846:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 247,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "3873:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3873:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3845:43:1"
            },
            "src": "3832:57:1"
          },
          {
            "anonymous": false,
            "id": 257,
            "name": "Withdrawal",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 251,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 257,
                  "src": "3909:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3909:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 253,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "withdrawer",
                  "nodeType": "VariableDeclaration",
                  "scope": 257,
                  "src": "3929:26:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 252,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3929:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 255,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 257,
                  "src": "3957:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3957:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3908:64:1"
            },
            "src": "3892:81:1"
          },
          {
            "anonymous": false,
            "id": 265,
            "name": "WithdrawalHandled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 259,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "4000:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 258,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4000:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 261,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "4014:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4014:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 263,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "batchSize",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "4026:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4026:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3999:45:1"
            },
            "src": "3976:69:1"
          }
        ],
        "scope": 267,
        "src": "504:3543:1"
      }
    ],
    "src": "32:4016:1"
  },
  "legacyAST": {
    "absolutePath": "/home/malik/Work/work/task/Plutus_task/smartcontract/contracts/Token.sol",
    "exportedSymbols": {
      "Context": [
        937
      ],
      "ERC20": [
        812
      ],
      "IERC20": [
        890
      ],
      "IERC20Metadata": [
        915
      ],
      "SafeMath": [
        1249
      ],
      "Token": [
        266
      ]
    },
    "id": 267,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 35,
        "nodeType": "ImportDirective",
        "scope": 267,
        "sourceUnit": 813,
        "src": "58:55:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 36,
        "nodeType": "ImportDirective",
        "scope": 267,
        "sourceUnit": 1250,
        "src": "114:57:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 38,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 812,
              "src": "522:5:1"
            },
            "id": 39,
            "nodeType": "InheritanceSpecifier",
            "src": "522:5:1"
          }
        ],
        "contractDependencies": [
          812,
          890,
          915,
          937
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 37,
          "nodeType": "StructuredDocumentation",
          "src": "173:241:1",
          "text": "@title Token - ERC20 Token\n @author Naveed\n @notice This is an ERC20 token, allowing users to deposit & withdraw tokens.\n @dev Except standard ERC20 token's features, this smartcontract has two additional features through which"
        },
        "fullyImplemented": true,
        "id": 266,
        "linearizedBaseContracts": [
          266,
          812,
          915,
          890,
          937
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 42,
            "libraryName": {
              "id": 40,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1249,
              "src": "538:8:1"
            },
            "nodeType": "UsingForDirective",
            "src": "532:27:1",
            "typeName": {
              "id": 41,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "551:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 43,
              "nodeType": "StructuredDocumentation",
              "src": "562:58:1",
              "text": "@notice account which handle users withdrawal requests"
            },
            "functionSelector": "f851a440",
            "id": 45,
            "mutability": "mutable",
            "name": "admin",
            "nodeType": "VariableDeclaration",
            "scope": 266,
            "src": "623:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "623:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 46,
              "nodeType": "StructuredDocumentation",
              "src": "647:46:1",
              "text": "@notice count to track pending withdrawals"
            },
            "functionSelector": "beca03d5",
            "id": 48,
            "mutability": "mutable",
            "name": "pendingWithdrawals",
            "nodeType": "VariableDeclaration",
            "scope": 266,
            "src": "696:33:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 47,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "696:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 49,
              "nodeType": "StructuredDocumentation",
              "src": "734:112:1",
              "text": "@notice mapping to track users deposits\n @dev depositer address => total amount depositer has deposited"
            },
            "functionSelector": "fc7e286d",
            "id": 53,
            "mutability": "mutable",
            "name": "deposits",
            "nodeType": "VariableDeclaration",
            "scope": 266,
            "src": "849:44:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 52,
              "keyType": {
                "id": 50,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "858:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "849:28:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 51,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "869:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 54,
              "nodeType": "StructuredDocumentation",
              "src": "898:93:1",
              "text": "@notice mapping to track users withdraw requests\n @dev withdrawId => Withdraw struct"
            },
            "functionSelector": "55466c37",
            "id": 59,
            "mutability": "mutable",
            "name": "withdraws",
            "nodeType": "VariableDeclaration",
            "scope": 266,
            "src": "994:46:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Withdraw_$64_storage_$",
              "typeString": "mapping(uint256 => struct Token.Withdraw)"
            },
            "typeName": {
              "id": 58,
              "keyType": {
                "id": 55,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1003:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "994:29:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Withdraw_$64_storage_$",
                "typeString": "mapping(uint256 => struct Token.Withdraw)"
              },
              "valueType": {
                "id": 57,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 56,
                  "name": "Withdraw",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 64,
                  "src": "1014:8:1"
                },
                "referencedDeclaration": 64,
                "src": "1014:8:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Withdraw_$64_storage_ptr",
                  "typeString": "struct Token.Withdraw"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Token.Withdraw",
            "id": 64,
            "members": [
              {
                "constant": false,
                "id": 61,
                "mutability": "mutable",
                "name": "withdrawer",
                "nodeType": "VariableDeclaration",
                "scope": 64,
                "src": "1157:18:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 60,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1157:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 63,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 64,
                "src": "1181:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 62,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1181:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Withdraw",
            "nodeType": "StructDefinition",
            "scope": 266,
            "src": "1135:65:1",
            "visibility": "public"
          },
          {
            "body": {
              "id": 89,
              "nodeType": "Block",
              "src": "1471:61:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 79,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1483:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1483:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 81,
                        "name": "supply_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "1495:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 78,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 672,
                      "src": "1477:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1477:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "1477:26:1"
                },
                {
                  "expression": {
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 84,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "1509:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 85,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1517:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1517:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1509:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "1509:18:1"
                }
              ]
            },
            "documentation": {
              "id": 65,
              "nodeType": "StructuredDocumentation",
              "src": "1204:169:1",
              "text": "@dev constructor to initialize Token contract.\n @param name_ name of ERC20 token\n @param symbol_ symbol of token\n @param supply_ total supply of token"
            },
            "id": 90,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 74,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 67,
                    "src": "1455:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 75,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 69,
                    "src": "1462:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 76,
                "modifierName": {
                  "id": 73,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 812,
                  "src": "1449:5:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1449:21:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "1388:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1388:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "1409:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1409:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "supply_",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "1432:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1432:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1387:61:1"
            },
            "returnParameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1471:0:1"
            },
            "scope": 266,
            "src": "1376:156:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 120,
              "nodeType": "Block",
              "src": "1879:189:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1950:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 98,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93,
                        "src": "1957:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 96,
                      "name": "transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 386,
                      "src": "1941:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1941:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1941:23:1"
                },
                {
                  "expression": {
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 101,
                        "name": "deposits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "1970:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 104,
                      "indexExpression": {
                        "expression": {
                          "id": 102,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1979:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1979:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1970:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 110,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "2018:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 105,
                            "name": "deposits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "1993:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 108,
                          "indexExpression": {
                            "expression": {
                              "id": 106,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2002:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2002:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1993:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1113,
                        "src": "1993:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1993:32:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1970:55:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "1970:55:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 115,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2044:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2044:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 117,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93,
                        "src": "2056:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 114,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 249,
                      "src": "2036:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2036:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 119,
                  "nodeType": "EmitStatement",
                  "src": "2031:32:1"
                }
              ]
            },
            "documentation": {
              "id": 91,
              "nodeType": "StructuredDocumentation",
              "src": "1536:300:1",
              "text": "@notice this function is to let token holder deposit his tokens to admin wallet/account.\n @dev token holders can deposit as much tokens as he wants in more than one transactions. Total deposit amount gets updated each time.\n @param amount amount of the tokens depositer want to deposit."
            },
            "functionSelector": "b6b55f25",
            "id": 121,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 93,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "1856:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1856:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1855:16:1"
            },
            "returnParameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1879:0:1"
            },
            "scope": 266,
            "src": "1839:229:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 161,
              "nodeType": "Block",
              "src": "2451:310:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 128,
                            "name": "deposits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "2465:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 131,
                          "indexExpression": {
                            "expression": {
                              "id": 129,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2474:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2474:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2465:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 132,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 124,
                          "src": "2489:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2465:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e73756666696369656e742066756e6473206465706f7369746564",
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2497:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3708508cdcde1a636712f5edf8c07c73f35903e7879f5ae7dce97685b6e38ff3",
                          "typeString": "literal_string \"insufficient funds deposited\""
                        },
                        "value": "insufficient funds deposited"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3708508cdcde1a636712f5edf8c07c73f35903e7879f5ae7dce97685b6e38ff3",
                          "typeString": "literal_string \"insufficient funds deposited\""
                        }
                      ],
                      "id": 127,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2457:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2457:71:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "2457:71:1"
                },
                {
                  "expression": {
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 137,
                      "name": "pendingWithdrawals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "2579:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2623:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 138,
                          "name": "pendingWithdrawals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "2600:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1113,
                        "src": "2600:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2600:25:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2579:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "2579:46:1"
                },
                {
                  "expression": {
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 144,
                        "name": "withdraws",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "2631:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Withdraw_$64_storage_$",
                          "typeString": "mapping(uint256 => struct Token.Withdraw storage ref)"
                        }
                      },
                      "id": 146,
                      "indexExpression": {
                        "id": 145,
                        "name": "pendingWithdrawals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "2641:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2631:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Withdraw_$64_storage",
                        "typeString": "struct Token.Withdraw storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 148,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2672:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2672:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 150,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 124,
                          "src": "2683:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 147,
                        "name": "Withdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "2663:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Withdraw_$64_storage_ptr_$",
                          "typeString": "type(struct Token.Withdraw storage pointer)"
                        }
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2663:27:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Withdraw_$64_memory_ptr",
                        "typeString": "struct Token.Withdraw memory"
                      }
                    },
                    "src": "2631:59:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Withdraw_$64_storage",
                      "typeString": "struct Token.Withdraw storage ref"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "2631:59:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 155,
                        "name": "pendingWithdrawals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "2717:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 156,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2737:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2737:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 158,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 124,
                        "src": "2749:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 154,
                      "name": "Withdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 257,
                      "src": "2706:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2706:50:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 160,
                  "nodeType": "EmitStatement",
                  "src": "2701:55:1"
                }
              ]
            },
            "documentation": {
              "id": 122,
              "nodeType": "StructuredDocumentation",
              "src": "2072:335:1",
              "text": "@notice this function is to let token holder withdraw his tokens from admin wallet/account.\n @dev token holders can withdraw as much tokens as he wants in more than one transactions.\n @param amount amount of the tokens withdrawer want to withdraw\n **** condition: withdrawer must have deposited enought tokens first."
            },
            "functionSelector": "2e1a7d4d",
            "id": 162,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "2428:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2428:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2427:16:1"
            },
            "returnParameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2451:0:1"
            },
            "scope": 266,
            "src": "2410:351:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 229,
              "nodeType": "Block",
              "src": "3168:500:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 171,
                          "name": "pendingWithdrawals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "3182:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3203:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3182:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f207769746864726177616c7320726571756573746564",
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3206:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad1abf60b8ced5e7a26dad11ad8fe13de581c58f92006c89519f5401029957ad",
                          "typeString": "literal_string \"no withdrawals requested\""
                        },
                        "value": "no withdrawals requested"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad1abf60b8ced5e7a26dad11ad8fe13de581c58f92006c89519f5401029957ad",
                          "typeString": "literal_string \"no withdrawals requested\""
                        }
                      ],
                      "id": 170,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3174:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3174:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "3174:59:1"
                },
                {
                  "assignments": [
                    178
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 178,
                      "mutability": "mutable",
                      "name": "from",
                      "nodeType": "VariableDeclaration",
                      "scope": 229,
                      "src": "3239:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 177,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3239:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 180,
                  "initialValue": {
                    "id": 179,
                    "name": "pendingWithdrawals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48,
                    "src": "3254:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3239:33:1"
                },
                {
                  "body": {
                    "id": 221,
                    "nodeType": "Block",
                    "src": "3319:280:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 192,
                              "name": "admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "3339:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 193,
                                  "name": "withdraws",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59,
                                  "src": "3346:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Withdraw_$64_storage_$",
                                    "typeString": "mapping(uint256 => struct Token.Withdraw storage ref)"
                                  }
                                },
                                "id": 195,
                                "indexExpression": {
                                  "id": 194,
                                  "name": "pendingWithdrawals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48,
                                  "src": "3356:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3346:29:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Withdraw_$64_storage",
                                  "typeString": "struct Token.Withdraw storage ref"
                                }
                              },
                              "id": 196,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "withdrawer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 61,
                              "src": "3346:40:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 197,
                                  "name": "withdraws",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59,
                                  "src": "3388:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Withdraw_$64_storage_$",
                                    "typeString": "mapping(uint256 => struct Token.Withdraw storage ref)"
                                  }
                                },
                                "id": 199,
                                "indexExpression": {
                                  "id": 198,
                                  "name": "pendingWithdrawals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48,
                                  "src": "3398:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3388:29:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Withdraw_$64_storage",
                                  "typeString": "struct Token.Withdraw storage ref"
                                }
                              },
                              "id": 200,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 63,
                              "src": "3388:36:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 191,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 616,
                            "src": "3329:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3329:96:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 202,
                        "nodeType": "ExpressionStatement",
                        "src": "3329:96:1"
                      },
                      {
                        "expression": {
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "3435:36:1",
                          "subExpression": {
                            "baseExpression": {
                              "id": 203,
                              "name": "withdraws",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59,
                              "src": "3442:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Withdraw_$64_storage_$",
                                "typeString": "mapping(uint256 => struct Token.Withdraw storage ref)"
                              }
                            },
                            "id": 205,
                            "indexExpression": {
                              "id": 204,
                              "name": "pendingWithdrawals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "3452:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3442:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Withdraw_$64_storage",
                              "typeString": "struct Token.Withdraw storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 207,
                        "nodeType": "ExpressionStatement",
                        "src": "3435:36:1"
                      },
                      {
                        "expression": {
                          "id": 213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 208,
                            "name": "pendingWithdrawals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "3481:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 211,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3525:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "id": 209,
                                "name": "pendingWithdrawals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48,
                                "src": "3502:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 210,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1128,
                              "src": "3502:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3502:25:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3481:46:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 214,
                        "nodeType": "ExpressionStatement",
                        "src": "3481:46:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 215,
                            "name": "pendingWithdrawals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "3541:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3563:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3541:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 220,
                        "nodeType": "IfStatement",
                        "src": "3537:56:1",
                        "trueBody": {
                          "id": 219,
                          "nodeType": "Block",
                          "src": "3565:28:1",
                          "statements": [
                            {
                              "id": 218,
                              "nodeType": "Break",
                              "src": "3577:5:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 185,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 182,
                      "src": "3299:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 186,
                      "name": "batchSize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 165,
                      "src": "3303:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3299:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 222,
                  "initializationExpression": {
                    "assignments": [
                      182
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 182,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 222,
                        "src": "3284:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 181,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3284:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 184,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3296:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3284:13:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3314:3:1",
                      "subExpression": {
                        "id": 188,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 182,
                        "src": "3314:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 190,
                    "nodeType": "ExpressionStatement",
                    "src": "3314:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "3279:320:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 224,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "3627:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 225,
                        "name": "pendingWithdrawals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "3633:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 226,
                        "name": "batchSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "3653:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 223,
                      "name": "WithdrawalHandled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 265,
                      "src": "3609:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256)"
                      }
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3609:54:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 228,
                  "nodeType": "EmitStatement",
                  "src": "3604:59:1"
                }
              ]
            },
            "documentation": {
              "id": 163,
              "nodeType": "StructuredDocumentation",
              "src": "2765:337:1",
              "text": "@notice this function is to let admin handle withdraw requests of withdrawers by sending them back their deposited amount as per their withdraw request.\n @dev only admin can trigger this function.\n @param batchSize number of withdraws to process\n **** condition: withdraws must be requested first by users/withdrawers."
            },
            "functionSelector": "01b86d12",
            "id": 230,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 168,
                "modifierName": {
                  "id": 167,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 243,
                  "src": "3151:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3151:9:1"
              }
            ],
            "name": "handleWithdrawals",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "batchSize",
                  "nodeType": "VariableDeclaration",
                  "scope": 230,
                  "src": "3132:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3132:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3131:19:1"
            },
            "returnParameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3168:0:1"
            },
            "scope": 266,
            "src": "3105:563:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 242,
              "nodeType": "Block",
              "src": "3736:80:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 234,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3750:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3750:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 236,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "3764:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3750:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "756e617574686f72697a65643a2063616c6c6572206e6f742061646d696e",
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3771:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e19267ef066701204f2bf44bb207af60fe0311e77fd06f6849dd17844eaebb66",
                          "typeString": "literal_string \"unauthorized: caller not admin\""
                        },
                        "value": "unauthorized: caller not admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e19267ef066701204f2bf44bb207af60fe0311e77fd06f6849dd17844eaebb66",
                          "typeString": "literal_string \"unauthorized: caller not admin\""
                        }
                      ],
                      "id": 233,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3742:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3742:62:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 240,
                  "nodeType": "ExpressionStatement",
                  "src": "3742:62:1"
                },
                {
                  "id": 241,
                  "nodeType": "PlaceholderStatement",
                  "src": "3810:1:1"
                }
              ]
            },
            "documentation": {
              "id": 231,
              "nodeType": "StructuredDocumentation",
              "src": "3669:43:1",
              "text": "@dev modifier to ensure caller is admin"
            },
            "id": 243,
            "name": "onlyAdmin",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3733:2:1"
            },
            "src": "3715:101:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 249,
            "name": "Deposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 245,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "depositer",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "3846:25:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3846:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 247,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "3873:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3873:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3845:43:1"
            },
            "src": "3832:57:1"
          },
          {
            "anonymous": false,
            "id": 257,
            "name": "Withdrawal",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 251,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 257,
                  "src": "3909:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3909:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 253,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "withdrawer",
                  "nodeType": "VariableDeclaration",
                  "scope": 257,
                  "src": "3929:26:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 252,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3929:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 255,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 257,
                  "src": "3957:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3957:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3908:64:1"
            },
            "src": "3892:81:1"
          },
          {
            "anonymous": false,
            "id": 265,
            "name": "WithdrawalHandled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 259,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "4000:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 258,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4000:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 261,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "4014:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4014:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 263,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "batchSize",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "4026:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4026:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3999:45:1"
            },
            "src": "3976:69:1"
          }
        ],
        "scope": 267,
        "src": "504:3543:1"
      }
    ],
    "src": "32:4016:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2022-01-22T19:33:04.538Z",
  "devdoc": {
    "author": "Naveed",
    "details": "Except standard ERC20 token's features, this smartcontract has two additional features through which",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "details": "constructor to initialize Token contract.",
        "params": {
          "name_": "name of ERC20 token",
          "supply_": "total supply of token",
          "symbol_": "symbol of token"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "deposit(uint256)": {
        "details": "token holders can deposit as much tokens as he wants in more than one transactions. Total deposit amount gets updated each time.",
        "params": {
          "amount": "amount of the tokens depositer want to deposit."
        }
      },
      "handleWithdrawals(uint256)": {
        "details": "only admin can trigger this function.",
        "params": {
          "batchSize": "number of withdraws to process **** condition: withdraws must be requested first by users/withdrawers."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "withdraw(uint256)": {
        "details": "token holders can withdraw as much tokens as he wants in more than one transactions.",
        "params": {
          "amount": "amount of the tokens withdrawer want to withdraw **** condition: withdrawer must have deposited enought tokens first."
        }
      }
    },
    "stateVariables": {
      "deposits": {
        "details": "depositer address => total amount depositer has deposited"
      },
      "withdraws": {
        "details": "withdrawId => Withdraw struct"
      }
    },
    "title": "Token - ERC20 Token",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "admin()": {
        "notice": "account which handle users withdrawal requests"
      },
      "deposit(uint256)": {
        "notice": "this function is to let token holder deposit his tokens to admin wallet/account."
      },
      "deposits(address)": {
        "notice": "mapping to track users deposits"
      },
      "handleWithdrawals(uint256)": {
        "notice": "this function is to let admin handle withdraw requests of withdrawers by sending them back their deposited amount as per their withdraw request."
      },
      "pendingWithdrawals()": {
        "notice": "count to track pending withdrawals"
      },
      "withdraw(uint256)": {
        "notice": "this function is to let token holder withdraw his tokens from admin wallet/account."
      },
      "withdraws(uint256)": {
        "notice": "mapping to track users withdraw requests"
      }
    },
    "notice": "This is an ERC20 token, allowing users to deposit & withdraw tokens.",
    "version": 1
  }
}